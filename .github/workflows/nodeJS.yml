env:
  CI: false

name: Node.js CI

on:
  push:
    branches:
      - master
      - 'feature/**'
      - 'fix/**'
  pull_request:
    branches: [ master ]

jobs:

  build:

    name: NodeJS Install and Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [17.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './react/package-lock.json'

    - run: npm ci
      working-directory: ./react
    - run: npm run build --if-present
      working-directory: ./react


  docker:

    needs: build
    name: Docker Build and Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN_TWO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push FE
        uses: docker/build-push-action@v2
        with:
          context: ./react
          file: ./react/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/online-data-scientist-fe:latest
#          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/online-data-scientist-fe:buildcache
#          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/online-data-scientist-fe:buildcache,mode=max

      - name: Build and push Nginx
        uses: docker/build-push-action@v3
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/online-data-scientist-proxy:latest